name: Tests master

on: [push, pull_request]
# XXX  # This avoids having duplicate builds for a pull request
#  push:
#    branches:
#    - master
#  pull_request:
#    branches:
#    - master
  
env:
  CI: True

jobs:

  # Run the python tests
  py:
    name: Python ${{ matrix.python-version }} tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - os: macos-latest
            python-version: 3.x
          - os: windows-latest
            python-version: 3.x

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        id: py
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache directory
        id: pip-cache-dir
        run: echo "::set-output name=dir::$(pip cache dir)"
      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: >-
            ${{ runner.os }}-pip-py${{ steps.py.outputs.python-version
            }}-${{ hashFiles('**/setup.py', 'tox.ini') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Install imagemagic, ffmpeg (MacOS)
        if: startsWith(runner.os, 'macOS')
        env:
          # XXX: does not seem to help :-/
          # This might immensely speed the run of update-mime-database which
          # occurs as part of installing dependencies of imagemagick.
          PKGSYSTEM_ENABLE_FSYNC: 0
        run: brew install imagemagick ffmpeg --display-times

      - name: Install imagemagic, ffmpeg (Windows)
        if: startsWith(runner.os, 'Windows')
        # ImageMagick is temporarily pinned because of 404 issues
        # while installing
        run: |
          choco install imagemagick.tool --version=7.0.10.29 --no-progress -y
          choco install ffmpeg --no-progress -y
        timeout-minutes: 10

      - name: Test with tox
        run: tox

  # Run the lint-py and lint-js tox environments
  lint:
    name: Lint (node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup Python
        id: py
        uses: actions/setup-python@v2

      - name: Setup node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore npm, pip, pre-commit caches
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache/pip
            ~/.cache/pre-commit
          key: >-
            lint-node${{ matrix.node-version
            }}-py${{ steps.py.outputs.python-version
            }}-${{ hashFiles(
              'setup.py',
              '**/package-lock.json',
              '.pre-commit-config.yaml',
              'tox.ini',
              '.github/workflows/ci.yml'
            ) }}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Install node dependencies
        run: npm ci
        working-directory: ./lektor/admin

      - name: Test with tox
        run: tox -e lint-py,lint-js

      - name: Debug pre-commit cache
        run: ls ~/.cache/pre-commit


  # Run the node tests
  node:
    name: Node ${{ matrix.node-version }} tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.xfail }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [14]
        xfail: [false]
        include:
          # Webpack seems to fail on Win node 14 sporadically.
          #
          - os: windows-latest
            node-version: 14
            xfail: true
          - os: windows-latest
            node-version: 12
            xfail: false
            
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup Python
        id: py
        uses: actions/setup-python@v2

      - name: Setup node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get cache directories
        id: cache-dirs
        run: |
          echo "::set-output name=npm::$(npm config get cache)"
          echo "::set-output name=pip::$(pip cache dir)"
      - name: Restore npm, pip caches
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache-dirs.outputs.npm }}
            ${{ steps.cache-dirs.outputs.pip }}
          key: >-
            ${{ runner.os
            }}-node${{ matrix.node-version
            }}-py${{ steps.py.outputs.python-version
            }}-${{ hashFiles(
              'setup.py',
              '**/package-lock.json',
              'tox.ini',
              '.github/workflows/ci.yml'
            ) }}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Test with tox
        run: tox -e frontend

      - name: Dump npm logs on failure
        if: startsWith(runner.os, 'Windows') && failure()
        run: |
          ls c:\Users\runneradmin\npm-cache\_logs
          cat c:\Users\runneradmin\npm-cache\_logs\*.log
