name: Tests master

on: [push, pull_request]
# XXX  # This avoids having duplicate builds for a pull request
#  push:
#    branches:
#    - master
#  pull_request:
#    branches:
#    - master

jobs:
  test:
    name: Python ${{ matrix.python-version }} tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - os: ubuntu-latest
            pip-dl-cache: ~/.cache/pip
          - os: macos-latest
            python-version: 3.9
            pip-dl-cache: ~/Library/Caches/pip
          - os: windows-latest
            python-version: 3.9
            pip-dl-cache: ~\AppData\Local\pip\Cache

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          # XXX: needed?
          #architecture: 'x64'

      - name: Cache pip download cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.pip-dl-cache }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Debug Homebrew cache
        if: startsWith(runner.os, 'macOS')
        run: |
          ls -sFR ~/Library/Caches/Homebrew

      - name: Cache Homebrew download cache (MacOS)
        if: startsWith(runner.os, 'macOS')
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/Homebrew
          key: homebrew

      - name: Install imagemagic, ffmpeg (MacOS)
        if: startsWith(runner.os, 'macOS')
        run: |
          brew install imagemagick
          brew install ffmpeg

      - name: Debug Homebrew cache post
        if: startsWith(runner.os, 'macOS')
        run: |
          ls -sFR ~/Library/Caches/Homebrew

      - name: Install imagemagic, ffmpeg (Windows)
        if: startsWith(runner.os, 'Windows')
        # ImageMagick is temporarily pinned because of 404 issues while installing
        run: |
          choco install imagemagick.tool --version=7.0.10.29 --timeout 600 --no-progress -y
          choco install ffmpeg --timeout 600 --no-progress -y

      - name: Test with tox
        run: tox

  ############################################################################
  # Smoke tests
  ############################################################################
  linux-smoke-node:
    if: false
    name: Linux node${{ matrix.NODEJS_VERSION }} smoke test
    runs-on: ubuntu-latest
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['14']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache node
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**/package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  linux-smoke-py:
    if: false
    name: Linux py${{ matrix.PYTHON_VERSION }} smoke test
    runs-on: ubuntu-latest
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.9']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  ############################################################################
  # Node tests
  ############################################################################
  linux-node:
    if: false
    name: Linux node${{ matrix.NODEJS_VERSION }} tests
    runs-on: ubuntu-latest
    needs: linux-smoke-node
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['10']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache node
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**/package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  mac-node:
    if: false
    name: Mac node${{ matrix.NODEJS_VERSION }} tests
    runs-on: macos-latest
    needs: linux-smoke-node
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['12']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache node
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**/package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  win-node:
    if: false
    name: Win node${{ matrix.NODEJS_VERSION }} tests
    runs-on: windows-latest
    needs: linux-smoke-node
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['12']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache node
        uses: actions/cache@v2
        with:
          path: ~\AppData\Roaming\npm-cache
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**\package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  ############################################################################
  # Python tests
  ############################################################################
  linux-py:
    if: false
    name: Linux py${{ matrix.PYTHON_VERSION }} tests
    runs-on: ubuntu-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.6', '3.7']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09


  mac-py:
    if: false
    name: Mac py${{ matrix.PYTHON_VERSION }} tests
    runs-on: macos-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.6', '3.9']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install system dependencies
        run: |
          brew install imagemagick
          brew install ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  win-py:
    if: false
    name: Win py${{ matrix.PYTHON_VERSION }} tests
    runs-on: windows-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.6', '3.9']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**\setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      # ImageMagick is temporarily pinned because of 404 issues while installing
      - name: Install system dependencies
        run: |
          choco install --timeout 600 imagemagick.tool --version=7.0.10.29
          choco install --timeout 600 ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09
